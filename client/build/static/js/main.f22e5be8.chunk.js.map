{"version":3,"sources":["images/home.png","images/contact.png","images/logout.png","images/next.png","components/Jumbotron.jsx","components/sidebar.jsx","components/Login.jsx","components/Dashboard.jsx","components/Chat.jsx","components/Contact.jsx","app.jsx","index.js","images/logo.png","images/one.jpg","images/two.jpg","images/login.png","images/doctor-icon.png","images/three.jpg","images/four.jpg"],"names":["module","exports","Jumbotron","state","image1","one","image2","two","count","jumbotron_1","document","querySelector","jumbotron_2","querySelectorAll","this","timeout","setTimeout","classList","add","interval","setInterval","toggle","setState","three","four","timeOut","jumbotron","remove","console","log","clearInterval","clearTimeout","className","src","alt","React","Component","Navbar","onSetSidebarOpen","sidebarOpen","open","content","require","onClick","props","page_handler","id","logged","to","animate","offset","duration","logout","pullRight","sidebar","onSetOpen","styles","background","width","marginTop","border","padding","position","type","style","float","Login","form","toggle_form","register","onSubmit","login","name","value","username","onChange","change","placeHolder","required","password","email","submit","Dashboard","edit_toggle","e","dashboard","slide","data","fullname","phone","file","changes_saved","file_change","file_submit","file_saved","VideoComponent","slide_transition","chat","token","identity","roomName","roomNameErr","previewTracks","localMediaAvailable","hasJoinedRoom","activeRoom","stayOn","joinRoom","bind","handleRoomNameChange","leaveRoom","detachTracks","detachParticipantTracks","roomJoined","getTracks","target","trim","connectOptions","tracks","Video","connect","then","error","alert","message","container","forEach","track","appendChild","attach","participant","isLocal","attachTracks","Array","from","values","filter","publication","map","room","previewContainer","refs","localMedia","attachParticipantTracks","localParticipant","participants","remoteMedia","isSubscribed","getElementById","on","display","onclick","kind","stop","disconnect","htmlElements","detach","axios","get","params","results","catch","ex","chat_page","showLocalTrack","ref","joinOrLeaveRoomButton","errortext","undefined","Contact","subject","sent","form_change","joi_funk","preventDefault","message_schema","Joi","string","min","validate","form_submit","details","a","async","post","App","page","jwt","localStorage","getItem","jwt_decode","jwtDecode","body_fade_in","root","files","FormData","append","headers","update_change","dummy","userData","update_submit","_id","user_id","login_change","toLowerCase","login_submit","user","chatKey","setItem","register_submit","schema","max","minDomainAtoms","logout_handler","removeItem","file_name","login_props","user_data","ReactDOM","render"],"mappings":"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","file":"static/js/main.f22e5be8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.b00c10b3.png\";","module.exports = __webpack_public_path__ + \"static/media/contact.251cb2aa.png\";","module.exports = __webpack_public_path__ + \"static/media/logout.e2eb3b2c.png\";","module.exports = __webpack_public_path__ + \"static/media/next.8385e1b3.png\";","import React from 'react';\nimport one from '../images/one.jpg';\nimport two from '../images/two.jpg';\nimport three from '../images/three.jpg';\nimport four from '../images/four.jpg';\n\nclass Jumbotron extends React.Component{\n    state = {\n        image1: one,\n        image2: two,\n        count: 0\n    }\n    componentDidMount(){\n        const jumbotron_1 = document.querySelector('.jumbotron_parent div:nth-child(1)');\n        const jumbotron_2 = document.querySelector('.jumbotron_parent div:nth-child(2)');\n        const jumbo_divs = document.querySelectorAll('.jumbo_div');\n        let count = 0; \n\n        this.timeout = setTimeout(() => {\n        //    jumbo_divs.forEach( div => div.classList.add('fade_in') ); \n        jumbotron_1.classList.add('fade_in'); \n\n           this.interval = setInterval(() => {\n            jumbotron_1.classList.toggle('toggle_opacity'); // DIV 1 - FADE OUT\n            jumbotron_2.classList.add('fade_in'); // DIV 2 - FADE IN \n            count++;\n            \n            if(count > 3) { count = 0; }\n\n            if(count == 0){\n                this.setState({ image1: one }); \n            }\n            else if(count == 1){\n                this.setState({ image2: two }); \n            }\n            else if(count == 2){\n                this.setState({ image1: three }); \n            } \n            else if (count == 3){\n                this.setState({ image2: four }); \n            }\n        }, 5000); \n\n        }, 6000); \n\n\n        this.timeOut = setTimeout(() => {\n            const jumbotron = document.querySelector('.jumbotron_parent');\n            jumbotron.classList.remove('slide_out'); \n            jumbotron.classList.add('slide_in');\n        }, 2000);\n    }\n\n    componentWillUnmount(){\n        console.log(`unmounting jumbotron and clearing ${this.interval}`); \n        clearInterval(this.interval);\n        clearTimeout(this.timeOut); \n        clearTimeout(this.timeout); \n    }\n    render(){\n        return(\n            <div className = 'page_transition'>\n                <main className = 'jumbotron_parent slide_transition slide_out'>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image1} alt = '' />\n                    </div>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image2} alt = '' />\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Jumbotron; ","import React, {Component} from 'react';\nimport '../styles/hamburger/hamburgers.css'; \nimport Sidebar from 'react-sidebar';\nimport Scrollchor from 'react-scrollchor';\nimport '../styles/navbar.css'; \n\nclass Navbar extends Component {\n    state = { \n        onSetSidebarOpen: true,\n        sidebarOpen: false\n     }\n\n    onSetSidebarOpen = (open) => {\n        this.setState({ sidebarOpen: open });\n    }\n\n    render() { \n        // WRITE NAVBAR CONTENT IN content, THEN INJECT IT INTO SIDEBAR \n        const content = \n        <div className = 'navbar_container'>\n            <span>\n                <img src = {require('../images/logo.png')} alt = 'logo' />\n            </span>\n            <nav>\n                    <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/home.png')} alt = ''/>\n                        <p id = 'home'>Home</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>\n                    <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/login.png')} alt = ''/>\n                        <p id = 'login'>{this.props.logged ? \"Dashboard\" : \"Login\"}</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>\n                    {this.props.logged && <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/doctor-icon.png')} alt = ''/>\n                        <p id = 'consultation'>Consultation</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>}\n                    <Scrollchor to=\"#contact_container\" animate={{offset: 12, duration: 300}}>\n                        <a className = 'nav_item' onClick = {this.props.page_handler} >\n                            <img src = {require('../images/contact.png')} alt = ''/>\n                            <p id = 'contact'>Contact</p>\n                            <img src = {require('../images/next.png')} alt = ''/>\n                        </a>\n                    </Scrollchor>\n                    {this.props.logged && <a className = 'nav_item' onClick = {this.props.logout} >\n                        <img src = {require('../images/logout.png')} alt = ''/>\n                        <p>Logout</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>}\n            </nav> \n        </div>; \n\n        const navbar_styling = { \n            background: \"white\", \n            width: 300, \n            marginTop: 90, \n            border: 'solid thick rgba(192, 192, 192, 0.589)',\n            padding: 10,\n            position: 'fixed'\n    }\n\n        return ( \n            <div>\n                <Sidebar \n                    pullRight // floats the sidebar to the right \n                    sidebar={<b>{ content }</b>} // SIDEBAR CONTENT GOES HERE \n                    open={this.state.sidebarOpen} // opens value is this.state.onSetSidebarOpen which is passed to the function\n                    onSetOpen={this.onSetSidebarOpen} // triggers open and close of sidebar \n                    styles={{ sidebar: navbar_styling }} // styling \n                >\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    <button onClick={() => this.onSetSidebarOpen(true)} \n                    className={ this.state.sidebarOpen ? \"hamburger hamburger--elastic is-active\" : \"hamburger hamburger--elastic\" } \n                    type=\"button\" style = {{ float: 'right', marginTop: 10 }} >\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    </button>\n                </Sidebar>\n            </div>\n         );\n    }\n}\n \nexport default Navbar;","import React from 'react';\nimport '../styles/dashboard/login.css'; \nimport axios from 'axios'; \n\nclass Login extends React.Component{\n    state = {\n        form: 1\n    }\n\n    toggle_form = () => {\n        this.setState({ form: 1 }); \n        if(this.state.form === 1){\n            this.setState({ form: 0 }); \n        }\n    }\n\n    render(){\n        const register = (\n            <form onSubmit = {this.props.login.register}>\n                <div className = 'form-group'>\n                    <input type = 'text' name = 'username' className = 'form-control' \n                        value = {this.props.login.username} onChange = {this.props.login.change}\n                        placeHolder = \"username\" required\n                    />\n                </div>\n                <div className = 'form-group'>\n                    <input type = 'text' name = 'password' className = 'form-control' \n                        value = {this.props.login.password} onChange = {this.props.login.change}\n                        placeHolder = \"password\" required\n                    />\n                </div>\n                <div className = 'form-group'>\n                    <input type = 'text' name = 'email' className = 'form-control' \n                        value = {this.props.login.email} onChange = {this.props.login.change}\n                        placeHolder = \"email\" required\n                    />\n                </div>\n                <input type = 'submit' className = 'btn btn-block btn-primary' \n                    value = 'register'\n                />\n                <button className = 'btn btn-primary btn-block' onClick = {this.toggle_form}\n                >Back</button>\n            </form>\n        );\n\n        return(\n                <div id = 'login' className = 'login_container'>\n                    <div> \n                        <span>\n                            <img src ={require('../images/login.png')} alt = '' />\n                            {this.state.form ? <h1>Login to your account</h1> : <h1>Register a new account</h1>}\n                        </span>\n                        { this.state.form ? <form onSubmit = {this.props.login.submit} >\n                            <div className = 'form-group'>\n                                <input type = 'text' name = 'username' className = 'form-control' \n                                    value = {this.props.login.username} onChange = {this.props.login.change}\n                                    placeHolder = \"username\" required\n                                />\n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'password' name = 'password' className = 'form-control' \n                                    value = {this.props.login.password} onChange = {this.props.login.change}\n                                    placeHolder = \"password\" required\n                            />\n                            </div>\n                            <input type = 'submit' className = 'btn btn-block btn-primary' \n                                value = 'login'\n                            />\n                            <button className = 'btn btn-primary btn-block' onClick = {this.toggle_form}\n                            >Register</button>\n                        </form> : register }\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Login; ","\nimport React from 'react';\nimport axios from 'axios'; \nimport '../styles/dashboard/dashboard.css'; \n\nclass Dashboard extends React.Component {\n    state = {\n        toggle: 0\n    }\n    edit_toggle = (e) => {\n        if(this.state.toggle === 0){\n            this.setState({ toggle: 1 });\n        } \n        else  {\n            this.setState({ toggle: 0 }); \n        }\n    }\n\n    componentDidMount(){\n        const dashboard = document.querySelector('#dashboard_parent_container');\n        this.slide = setTimeout(() => {\n            dashboard.classList.remove('slide_out_left');\n            dashboard.classList.add('slide_in_right'); \n        }, 1000);\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.slide); \n    }\n\n    render() { \n        return ( \n            <div id = 'dashboard_parent_container' className = 'slide_transition slide_out_left'>\n                <div id = 'dashboard_container'>\n                    <section>\n                        <h1><span>Your Dashboard</span> {this.props.data.username} </h1>\n                        <h6>All the information you want to share with your Dr. is here. <br />\n                            Feel free to update it at any time below. \n                        </h6>\n                        <ul>\n                            <li><span>Username:</span> {this.props.data.username}</li>\n                            <li><span>Full Name:</span> {this.props.data.fullname}</li>\n                            <li><span>Email:</span> {this.props.data.email}</li>\n                            <li><span>Phone #:</span> {this.props.data.phone}</li>\n                        </ul>\n                    </section>\n                    {/* EDIT SECTION TO TOGGLE  */}\n                    <button className = 'btn btn-sm btn-primary btn-block mb-3' \n                    onClick = {this.edit_toggle}>{this.state.toggle === 0 ? \"Edit Info\" : \"Back\"}</button>\n                    \n                    {/* EDIT FORM */}\n                    {this.state.toggle === 1 && <section id = \"dashboard_edit\" >\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' name = 'fullname' value = {this.props.data.fullname} \n                                onChange = {this.props.change} className = 'form-control'\n                                /> \n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'email' name = 'email' value = {this.props.data.email} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'string' name = 'phone' value = {this.props.data.phone} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <input type = 'submit' onClick = {this.props.submit} className = 'btn btn-block'\n                            value = {!this.props.file.changes_saved ? \"Save Changes\" : \"Saved!\"} /> \n                        </form>\n                    </section>}\n\n                    {/* FILE UPLOAD FORM */}\n                    <section>\n                        <h4><span>Send Dr. Furelos a file</span></h4>\n                        <h6>If you need to share a file with Dr. Furelos you can do so here. \n                            Click on choose file.\n                        </h6>\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'file' name = 'file' onChange = {this.props.file.file_change}\n                                className = 'btn-primary btn-block'\n                                />\n                            </div>\n                            <input type = 'submit' className = 'btn btn-primary btn-block' onClick = {this.props.file.file_submit}\n                            value = {!this.props.file.file_saved ? \"Send File\" : \"Sent!\"} /> \n                        </form>\n                    </section>\n\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Dashboard;","import React, { Component } from 'react';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport '../styles/chat.css'; \nimport jwtDecode from 'jwt-decode';\n\nexport default class VideoComponent extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n          token: '', \n          identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n          roomName: '',    /* Will store the room name */\n          roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n          previewTracks: null,\n          localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n          hasJoinedRoom: false,\n          activeRoom: null, // Track the current active room,\n          stayOn: true\n       };\n        this.joinRoom = this.joinRoom.bind(this);\n        this.handleRoomNameChange = this.handleRoomNameChange.bind(this);\n        this.leaveRoom = this.leaveRoom.bind(this);\n        this.detachTracks = this.detachTracks.bind(this);\n        this.detachParticipantTracks =this.detachParticipantTracks.bind(this);\n        this.roomJoined = this.roomJoined.bind(this);\n        this.getTracks = this.getTracks.bind(this); \n     }\n\n    handleRoomNameChange(e) {\n        /* Fetch room name from text field and update state */\n            let roomName = e.target.value; \n            this.setState({ roomName });\n        }\n\n    joinRoom() {\n          if (!this.state.roomName.trim()) {\n                     this.setState({ roomNameErr: true });\n                     return;\n                 }\n         \n                 console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n                 let connectOptions = {\n                     name: this.state.roomName\n                 };\n         \n                 if (this.state.previewTracks) {\n                     connectOptions.tracks = this.state.previewTracks;\n                 }\n        \n         Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n           alert('Could not connect to Twilio: ' + error.message);\n         });\n    }\n\n         attachTracks(tracks, container) {\n            tracks.forEach(track => {\n              container.appendChild(track.attach());\n            });\n          }\n          \n          // Attach the Participant's Tracks to the DOM.\n        attachParticipantTracks(participant, container, isLocal) {\n            var tracks = this.getTracks(participant);\n            console.log('attaching participant tracks'); \n            this.attachTracks(tracks, container, isLocal);\n         }\n         \n        getTracks(participant) {\n            return Array.from(participant.tracks.values()).filter(function (publication) {\n               return publication.track;\n            }).map(function (publication) {\n               return publication.track;\n            });\n         }\n\n        roomJoined(room) {\n            // Called when a participant joins a room\n            console.log(\"Joined as '\" + this.state.identity + \"'\");\n            this.setState({\n              activeRoom: room,\n              localMediaAvailable: true,\n              hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n            });\n            \n          \n            // Attach LocalParticipant's tracks to the DOM, if not already attached.\n            var previewContainer = this.refs.localMedia;\n            if (!previewContainer.querySelector('video')) {\n              this.attachParticipantTracks(room.localParticipant, previewContainer);\n            }\n              // ... more event listeners\n\n            // Attach the Tracks of the room's participants.\n            room.participants.forEach(participant => {\n                console.log(\"Already in Room: '\" + participant.identity + \"'\");\n                var previewContainer = this.refs.remoteMedia;\n                this.attachParticipantTracks(participant, previewContainer);\n\n                participant.tracks.forEach(publication => {\n                  if (publication.isSubscribed) {\n                    const track = publication.track;\n                    document.getElementById('remote-media-div').appendChild(track.attach());\n                  }\n                });\n              \n                participant.on('trackSubscribed', track => {\n                  document.getElementById('remote-media-div').appendChild(track.attach());\n                });\n            });\n        \n            // Participant joining room\n            room.on('participantConnected', participant => {\n                console.log(\"Joining: '\" + participant.identity + \"'\");\n\n                participant.tracks.forEach(publication => {\n                  if (publication.isSubscribed) {\n                    const track = publication.track;\n                    document.getElementById('remote-media-div').appendChild(track.attach());\n                  }\n                });\n              \n                participant.on('trackSubscribed', track => {\n                  document.getElementById('remote-media-div').appendChild(track.attach());\n\n                  // delete the old video from when u disconnected\n                  document.querySelector('#remote-media-div').style.display = 'block';\n                  document.querySelector('#remote-media-div').onclick = ((e) => {\n                    e.target.style.display = 'none';\n                  })\n                });\n            });\n        \n            // Attach participant’s tracks to DOM when they add a track\n            room.on('trackAdded', (track, participant) => {\n                console.log(participant.identity + ' added track: ' + track.kind);\n                var previewContainer = this.refs.remoteMedia;\n                this.attachTracks([track], previewContainer);\n            });\n        \n            // Detach participant’s track from DOM when they remove a track.\n            room.on('trackRemoved', (track, participant) => {\n                this.log(participant.identity + ' removed track: ' + track.kind);\n                var previewContainer = this.refs.remoteMedia;\n                this.detachTracks([track], previewContainer);\n                document.getElementById('remote-media-div').style.display = 'none';\n            });\n        \n            // Detach all participant’s track when they leave a room.\n            room.on('participantDisconnected', participant => {\n                console.log(\"Participant '\" + participant.identity + \"' left the room\");\n                this.detachParticipantTracks(participant);\n                document.getElementById('remote-media-div').style.display = 'none';\n            });\n\n            room.on('disconnected', (room) => {\n                if (this.state.previewTracks) {\n                  this.state.previewTracks.forEach(track => {\n                    track.stop(); \n                  });\n                }\n                this.detachParticipantTracks(room.localParticipant);\n                room.participants.forEach(this.detachParticipantTracks);\n                this.state.activeRoom = null;\n                this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n              });\n        }\n\n          // Leaving a room \n          leaveRoom(){\n            this.state.activeRoom.disconnect();\n            this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n         }\n\n         detachParticipantTracks(participant) {\n            var tracks = this.getTracks(participant);\n            this.detachTracks(tracks);\n         }\n         \n         detachTracks(tracks) {\n            for (let track of tracks) {\n              const htmlElements = track.detach();\n              for (let htmlElement of htmlElements) {\n                 htmlElement.remove();\n               }\n            }\n         }\n\n         slide_transition = () => {\n           const chat = document.querySelector('.chat_parent_container');\n           this.slide = setTimeout(() => {\n            chat.classList.remove('slide_out');\n            chat.classList.add('slide_in'); \n           }, 1000); \n         }\n\n        async componentDidMount() {\n  \n         await axios.get('/api/twilio', {\n           params: {\n             username: this.props.token.username\n           }\n         })\n          .then(results => {\n            const { identity, token } = results.data;\n            console.log('twilio results', results); \n            this.setState({ identity, token });\n          })\n          .catch(ex => console.log('unable to get twilio key', ex)); \n  \n          this.slide_transition(); \n        }\n      \n\n      render() {\n\n        let chat_page = <div className=\"chat_content\">\n                          <h1>Chat</h1>\n                          <img className = 'chat_items' src = {require('../images/doctor-icon.png')} alt = '' />\n                        </div>; \n        /* \n         Controls showing of the local track\n         Only show video track after user has joined a room else show nothing \n        */\n        let showLocalTrack = this.state.localMediaAvailable ? (\n          <div>\n            <p className = 'm-2'>\n              You can chat with your physician below. To close any \n              videos which are not working simply click on them.\n            </p>\n            <div ref=\"localMedia\" id = 'video' className=\"chat_content\" />\n            <div id = 'remote-media-div' />\n          </div> ) : chat_page;   \n        /*\n         Controls showing of ‘Join Room’ or ‘Leave Room’ button.  \n         Hide 'Join Room' button if user has already joined a room otherwise \n         show `Leave Room` button.\n        */\n        let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n        <input type = 'submit' className = 'chat_btn btn btn-primary' value=\"Leave Room\" onClick={this.leaveRoom}  />) : (\n        <input type = 'submit' className = 'chat_btn btn btn-primary' value=\"Join Room\"  onClick={this.joinRoom} />\n        );\n\n        return (\n            <div className=\"chat_parent_container slide_transition slide_out\">\n                <div className = 'chat'>\n                    {showLocalTrack}\n                    {!this.state.hasJoinedRoom && <input className = 'chat_items' type = 'text' placeHolder=\"Your Chat Key\" onChange={this.handleRoomNameChange} \n                    errortext = {this.state.roomNameErr ? 'Room Name is required' : undefined} \n                    /> \n                    }\n                    {joinOrLeaveRoomButton}  \n                </div>\n            </div>\n        );\n      }\n}","\nimport React, {Component} from 'react';\nimport '../styles/contact.css'; \nimport axios from 'axios'; \nimport Joi from 'joi-browser'; \n\nclass Contact extends Component{\n    state = {\n        name: '',\n        subject: '',\n        message: '',\n        sent: false,\n        error: ''\n    }\n    form_change = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        }); \n    }\n\n    joi_funk = (e) => {\n        e.preventDefault();\n        const message_schema = {\n            name: Joi.string().required(),\n            subject: Joi.string().required(),\n            message: Joi.string().min(10).required()\n        }\n        Joi.validate({\n            name: this.state.name,\n            subject: this.state.subject,\n            message: this.state.message\n        }, message_schema)\n        .then( () => this.form_submit() )\n        .catch( ex => {\n            console.log(ex.details[0].message);\n            const error = ex.details[0].message;\n            this.setState({ error }); \n            alert(this.state.error); \n        } ); \n    }\n\n    form_submit = async (e) => {\n        // e.preventDefault();\n        await axios.post('/api/nodemailer', {\n            name: this.state.name,\n            subject: this.state.subject,\n            message: this.state.message\n        })\n        .then( data => {\n            console.log('Email has been sent!', data);\n            this.setState({ sent: true }); \n\n            setTimeout(() => {\n                this.setState({\n                    sent: false,\n                    name: '',\n                    subject: '',\n                    message: ''\n                })\n            }, 3000);\n        } )\n        .catch( ex => console.log('Unable to send email:', ex) ); \n    }\n\n    render(){\n        return(\n            <div id = 'contact_container'>\n                <div>\n                    <h1>Contact the Clinic</h1>\n                    <form onSubmit = {this.joi_funk}>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'name' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.name} placeHolder = 'name' required/>\n                        </div>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'subject' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.subject} placeHolder = 'subject' required/>\n                        </div>\n                        <div className = 'form-group'>\n                            <textarea type = 'text' name = 'message' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.message} placeHolder = 'message...'\n                            required></textarea>\n                        </div>\n                        <input type = 'submit' className = 'btn btn-block btn-primary' \n                         value = {this.state.sent ? \"Message Sent!\" : \"Send Message\" }\n                        />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport './index.css'; \nimport './styles/app/app.css'; \nimport 'bootstrap/dist/css/bootstrap.css'; \nimport axios from 'axios'; \nimport jwtDecode from 'jwt-decode'; \nimport Joi from 'joi-browser'; \n// import { login_schema } from './services/joi'; \n// COMPONENTS\nimport Jumbotron from './components/Jumbotron'; \nimport Navbar from './components/sidebar'; \nimport Login from './components/Login'; \nimport Dashboard from './components/Dashboard'; \nimport Chat from './components/Chat'; \nimport Contact from './components/Contact'; \n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            page: 'home',\n            username: '',\n            email: '',\n            password: '',\n            error: '',\n            logged: false,\n            changes_saved: false,\n            file_name: '', \n            file_saved: false,\n            userData: {\n                username: '',\n                fullname: '',\n                email: '',\n                phone: '',\n                chatKey: ''\n            },\n            file: ''\n        }\n    }\n\n    // PAGE CHANGER \n    page_handler = (e) => {\n        if(e.target.id === 'home'){\n            this.setState({ page: 'home' });\n            console.log(e.target.id); \n        } else if (e.target.id === 'login'){\n            console.log(e.target.id); \n            this.setState({ page: 'dashboard' })\n        } else if (e.target.id === 'consultation'){\n            console.log(e.target.id); \n            this.setState({ page: 'consultation' }); \n        }\n    }\n\n    jwt = () => {\n        const token = localStorage.getItem('token');\n        return token; \n    }\n\n    // RETRIEVE && DECODE - JWT \n    jwt_decode = () => {\n        const token = localStorage.getItem('token');\n        const decoded = jwtDecode(token);\n        return decoded; \n    }\n\n    // FADE IN BODY, CALLED FROM COMPONENT DID MOUNT \n    body_fade_in = () => {\n        const root = document.querySelector('#parent_container');\n        setTimeout(() => {\n            root.classList.add('fade_in'); \n        }, 2000);\n    }\n\n    // FILE UPLOAD  // FILE UPLOAD  // FILE UPLOAD // FILE UPLOAD  // FILE UPLOAD  // FILE UPLOAD\n    file_change = (e) => {\n        if (e.target.type === 'file') {\n            this.setState({ file: e.target.files[0] }, () => console.log('file state', this.state.file)); \n            console.log(e.target.value);\n        }\n    }\n\n    file_submit = async (e) => {\n        e.preventDefault();\n        const form = new FormData();\n        form.append('file', this.state.file);\n        this.setState({ file_saved: true });\n\n        await axios.post('/api/file_upload', form, {\n            headers: {\n                \"Content-type\": \"multipart/form-data\",\n                \"x-auth-token\": this.jwt()\n            }, \n        })\n        .then( data => {\n            console.log('file sent', data);\n            setTimeout(() => {\n                this.setState({ file_saved: false }); \n            }, 1000); \n        } )\n        .catch( ex => {\n            console.log('unable to send file', ex);\n            const error = 'unable to send file. try again shortly.';\n            this.setState({ error }); \n            alert(this.state.error); \n        } ); \n    }\n\n    // EDIT FORM - HANDLER      EDIT FORM       EDIT FORM       EDIT FORM       EDIT FORM       EDIT FORM\n    update_change = (e) => {\n        // create a dummy object to update properties then this.setState replacing old userData object with dummy. \n        const dummy = this.state.userData; \n\n        if(e.target.name === 'fullname'){\n            dummy.fullname = e.target.value;\n        } \n        if(e.target.name === 'email'){\n            dummy.email = e.target.value;\n        }\n        if(e.target.name === 'phone'){\n            dummy.phone = e.target.value;\n        }\n\n        this.setState({ dummy }); \n    }\n\n    // EDIT ACCOUNT FILE SUBMIT \n    update_submit = async (e) => {\n        e.preventDefault();\n        // JWT DECODED TO RETRIEVE USER_ID FROM JWT PAYLOAD AND USE ID TO MAKE MONGO UPDATE \n        let dummy = this.jwt_decode();\n\n        // AXIOS POST REQ TO UPDATE USER INFO\n        await axios.post('/api/update_patient', {\n            _id: dummy.user_id, // ID FROM JWT PAYLOAD\n            fullname: this.state.userData.fullname,\n            email: this.state.userData.email,\n            phone: this.state.userData.phone\n        }, {\n            headers: {\n                'x-auth-token': this.jwt()\n            }\n        })\n        .then( data => {\n            console.log('Updated data sent!', data);\n            this.setState({ changes_saved: true }); \n            setTimeout(() => {\n                this.setState({ changes_saved: false }); \n            }, 3000);\n        } )\n        .catch( ex => console.log('Updated failed...', ex) ); \n    }\n\n\n\n    // LOGIN - FORM HANDLER     LOGIN   LOGIN   LOGIN   LOGIN   LOGIN   LOGIN   LOGIN   LOGIN \n    login_change = (e) => {\n        this.setState({ [e.target.name]: e.target.value.toLowerCase() }); \n    }\n\n    // LOGIN SUBMIT METHOD\n    login_submit = async (e) => {\n        e.preventDefault();\n        \n        await axios.get('/api/login_patient', {\n            params: {\n                username: this.state.username,\n                password: this.state.password\n            }\n        })\n        .then( user => {\n            // POPULATING GLOBAL STATE WITH API PAYLOAD\n            this.setState({\n                userData: {\n                    username: user.data.username,\n                    fullname: user.data.fullname,\n                    email: user.data.email,\n                    phone: user.data.phone,\n                    chatKey: user.data.chatKey\n                }          \n            }, () => console.log('updpated global state: ', this.state)); \n\n            // UPDATE STATE LOGGED: TRUE\n            this.setState({ logged: true }); \n            \n            // SAVING JWT IN LOCAL APPLICATION STORAGE \n            const token = user.headers['x-auth-token'];\n            localStorage.setItem('token', token); \n        } )\n        .catch( ex => {\n            console.log('username or password is incorrect: ', ex);\n            this.setState({ error: 'username or password is incorrect' });\n            alert(this.state.error); \n        } ); \n    }\n\n    // REGISTER SUBMIT   REGISTER SUBMIT     REGISTER SUBMIT     REGISTER SUBMIT    REGISTER SUBMIT \n    register_submit = async (e) => {\n        e.preventDefault();\n\n        // JOI SCHEMA\n        const schema = {\n            username: Joi.string().min(4).max(15).required(),\n            password: Joi.string().min(4).max(128).required(),\n            email: Joi.string().email({ minDomainAtoms: 2 }).required()\n        }\n\n        // JOI VALIDATION \n        const validate = Joi.validate({\n            username: this.state.username,\n            email: this.state.email, \n            password: this.state.password\n        }, schema)\n        .then(async () => {\n            await axios.post('/api/create_patient', {\n                username: this.state.username,\n                password: this.state.password,\n                email: this.state.email\n        })\n        .then( user => {\n            // POPULATING GLOBAL STATE WITH API PAYLOAD\n            this.setState({\n                userData: {\n                    username: user.data.username,\n                    fullname: user.data.fullname,\n                    email: user.data.email,\n                    phone: user.data.phone,\n                    chatKey: user.data.chatKey\n                }          \n            }, () => console.log('updpated global state: ', this.state)); \n\n            // UPDATE STATE LOGGED: TRUE\n            this.setState({ logged: true }); \n            \n            // SAVING JWT IN LOCAL APPLICATION STORAGE \n            const token = user.headers['x-auth-token'];\n            localStorage.setItem('token', token); \n        } )\n        .catch( ex => {\n            const error = 'username or email already registered';\n            this.setState({ error }); \n            alert(this.state.error);\n        } ); \n        })\n        .catch(ex => {\n            console.log('not working', ex.details[0].message);\n            this.setState({ error: ex.details[0].message }); \n            alert(this.state.error); \n        }); \n    }\n\n    // LOGOUT   LOGOUT  LOGOUT  LOGOUT  LOGOUT  LOGOUT  LOGOUT \n    logout_handler = (e) => {\n        const remove = localStorage.removeItem('token');\n        this.setState({ logged: false }); \n    }\n\n    // COMPONENTDIDMOUNT TRIGGERS FADE IN ON LOAD \n   async componentDidMount(){\n        this.body_fade_in();\n\n        // ON MOUNT CHECK IF JWT, TO RENDER PAGE\n        const token = localStorage.getItem('token');\n        if(token){\n            await axios.get('/api/get_patient', {\n                params: {\n                    _id: this.jwt_decode(token).user_id\n                }\n            }) \n            .then( user => {\n             // POPULATING GLOBAL STATE WITH API PAYLOAD\n             this.setState({\n                 userData: {\n                     username: user.data.username,\n                     fullname: user.data.fullname,\n                     email: user.data.email,\n                     phone: user.data.phone,\n                     chatKey: user.data.chatKey\n                 }          \n             }, () => console.log('updpated global state: ', this.state)); \n \n             // UPDATE STATE LOGGED: TRUE\n             this.setState({ logged: true }); \n         } )\n         .catch( ex => console.log('Unable to retrieve data: ', ex) ); \n        }\n    }\n\n    render() { \n        // PROPS FOR LOGIN COMPONENT\n        const login_props = {\n            change: this.login_change,\n            submit: this.login_submit,\n            username: this.state.username,\n            password: this.state.password,\n            register: this.register_submit\n        }\n        // PROPS FOR DASHBOARD, THIS.STATE.USERDATA\n        const user_data = this.state.userData; \n        const file = {\n            file_change: this.file_change,\n            file_submit: this.file_submit,\n            changes_saved: this.state.changes_saved,\n            file_saved: this.state.file_saved\n        }\n\n        if(this.state.page === 'dashboard'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar page_handler = {this.page_handler} logged = {this.state.logged} logout = {this.logout_handler} /> \n                    </header>\n                    <main>\n                        { this.state.logged ? <Dashboard data = {user_data} submit = {this.update_submit}\n                        change = {this.update_change} file = {file} /> : <Login login = {login_props} /> }\n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n             );\n        } else if (this.state.page === 'home'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar  page_handler = {this.page_handler} logged = {this.state.logged} logout = {this.logout_handler} /> \n                    </header>\n                    <main>\n                        <Jumbotron /> \n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n            );\n        }\n        else if (this.state.page === 'consultation'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar  page_handler = {this.page_handler} logged = {this.state.logged} logout = {this.logout_handler} /> \n                    </header>\n                    <main>\n                        {this.state.logged ? <Chat token = {this.jwt_decode()} /> : <Jumbotron /> }\n                        { this.state.logged ? <Dashboard data = {user_data} submit = {this.update_submit}\n                        change = {this.update_change} file = {file} /> : <Login login = {login_props} /> }\n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n            );\n        }\n    }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app'; \n\nReactDOM.render(<App />, document.querySelector('#root')); ","module.exports = __webpack_public_path__ + \"static/media/logo.cfd14ba7.png\";","module.exports = __webpack_public_path__ + \"static/media/one.a2297d06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/two.38354f98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/login.4f1652b8.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor-icon.80a54b5b.png\";","module.exports = __webpack_public_path__ + \"static/media/three.298ea34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/four.cbdd4dc7.jpg\";"],"sourceRoot":""}