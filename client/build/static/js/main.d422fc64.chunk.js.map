{"version":3,"sources":["images/login.png","images/logo.png","components/Jumbotron.jsx","components/Navbar.jsx","components/Login.jsx","components/Dashboard.jsx","components/Contact.jsx","components/Chat.jsx","app.jsx","index.js","images/one.jpg","images/two.jpg","images/three.jpg","images/four.jpg"],"names":["module","exports","Jumbotron","state","image1","one","image2","two","count","jumbotron_1","document","querySelector","jumbotron_2","querySelectorAll","this","timeout","setTimeout","classList","add","interval","setInterval","console","log","toggle","setState","three","four","timeOut","jumbotron","remove","clearInterval","clearTimeout","className","src","alt","React","Component","Navbar","onSetSidebarOpen","open","sidebarOpen","content","pullRight","sidebar","onSetOpen","styles","background","position","zIndex","width","marginTop","onClick","type","style","float","Login","props","require","name","value","login","username","onChange","change","placeHolder","password","submit","Dashboard","edit_toggle","e","id","data","fullname","email","phone","placeholder","file","file_change","file_submit","Contact","subject","message","form_change","target","form_submit","a","async","preventDefault","axios","post","then","catch","ex","App","jwt","localStorage","getItem","jwt_decode","jwtDecode","body_fade_in","root","login_change","update_change","dummy","userData","files","form","FormData","append","headers","update_submit","_id","user_id","login_submit","get","params","user","chatKey","logged","token","setItem","page","login_props","user_data","ReactDOM","render"],"mappings":"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","file":"static/js/main.d422fc64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.4f1652b8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.cfd14ba7.png\";","import React from 'react';\nimport one from '../images/one.jpg';\nimport two from '../images/two.jpg';\nimport three from '../images/three.jpg';\nimport four from '../images/four.jpg';\n\nclass Jumbotron extends React.Component{\n    state = {\n        image1: one,\n        image2: two,\n        count: 0\n    }\n    componentDidMount(){\n        const jumbotron_1 = document.querySelector('.jumbotron_parent div:nth-child(1)');\n        const jumbotron_2 = document.querySelector('.jumbotron_parent div:nth-child(2)');\n        const jumbo_divs = document.querySelectorAll('.jumbo_div');\n        let count = 0; \n\n        this.timeout = setTimeout(() => {\n        //    jumbo_divs.forEach( div => div.classList.add('fade_in') ); \n        jumbotron_1.classList.add('fade_in'); \n\n           this.interval = setInterval(() => {\n            console.log(count); \n            jumbotron_1.classList.toggle('toggle_opacity'); // DIV 1 - FADE OUT\n            jumbotron_2.classList.add('fade_in'); // DIV 2 - FADE IN \n            count++;\n            \n            if(count > 3) { count = 0; }\n\n            if(count == 0){\n                this.setState({ image1: one }); \n            }\n            else if(count == 1){\n                this.setState({ image2: two }); \n            }\n            else if(count == 2){\n                this.setState({ image1: three }); \n            } \n            else if (count == 3){\n                this.setState({ image2: four }); \n            }\n        }, 5000); \n\n        }, 6000); \n\n\n        this.timeOut = setTimeout(() => {\n            const jumbotron = document.querySelector('.jumbotron_parent');\n            jumbotron.classList.remove('slide_out'); \n            jumbotron.classList.add('slide_in');\n        }, 2000);\n    }\n\n    componentWillUnmount(){\n        console.log(`unmounting jumbotron and clearing ${this.interval}`); \n        clearInterval(this.interval);\n        clearTimeout(this.timeOut); \n    }\n    render(){\n        return(\n            <div>\n                <main className = 'jumbotron_parent slide_transition slide_out'>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image1} alt = '' />\n                    </div>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image2} alt = '' />\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Jumbotron; ","import React, {Component} from 'react';\nimport '../styles/hamburger/hamburgers.css'; \nimport Sidebar from 'react-sidebar';\n\nclass Navbar extends Component {\n    state = { \n        onSetSidebarOpen: true\n     }\n\n    onSetSidebarOpen = (open) => {\n        this.setState({ sidebarOpen: open });\n    }\n\n    render() { \n        // WRITE NAVBAR CONTENT IN content, THEN INJECT IT INTO SIDEBAR \n        const content = \n        <div>\n            <h1>Hello world</h1>\n            <p>How art thou Romeo?</p>\n        </div>; \n\n        return ( \n            <div>\n                <Sidebar \n                    pullRight // floats the sidebar to the right \n                    sidebar={<b>{ content }</b>} // SIDEBAR CONTENT GOES HERE \n                    open={this.state.sidebarOpen} // opens value is this.state.onSetSidebarOpen which is passed to the function\n                    onSetOpen={this.onSetSidebarOpen} // triggers open and close of sidebar \n                    styles={{ sidebar: { background: \"white\", position: \"absolute\", zIndex: 2, width: 260, marginTop: 90 } }} // styling \n                >\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    <button onClick={() => this.onSetSidebarOpen(true)} \n                    className={ this.state.sidebarOpen ? \"hamburger hamburger--elastic is-active\" : \"hamburger hamburger--elastic\" } \n                    type=\"button\" style = {{ float: 'right', marginTop: 10 }} >\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    </button>\n                </Sidebar>\n            </div>\n         );\n    }\n}\n \nexport default Navbar;","import React from 'react';\nimport '../styles/dashboard/login.css'; \nimport axios from 'axios'; \n\nfunction Login(props){\n    return(\n        <div>\n            <div className = 'login_container'>\n                <div>\n                    <span>\n                        <img src ={require('../images/login.png')} alt = '' />\n                        <h1>Login to your account</h1>\n                    </span>\n                    <form>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'username' className = 'form-control' \n                                value = {props.login.username} onChange = {props.login.change}\n                                placeHolder = \"username\"\n                            />\n                        </div>\n                        <div className = 'form-group'>\n                            <input type = 'password' name = 'password' className = 'form-control' \n                                value = {props.login.password} onChange = {props.login.change}\n                                placeHolder = \"password\"\n                        />\n                        </div>\n                        <input type = 'submit' className = 'btn btn-block' \n                            value = 'login' onClick = {props.login.submit}\n                        />\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login; ","\nimport React from 'react';\nimport axios from 'axios'; \nimport '../styles/dashboard/dashboard.css'; \n\nclass Dashboard extends React.Component {\n    state = {\n        toggle: 0\n    }\n    edit_toggle = (e) => {\n        if(this.state.toggle === 0){\n            this.setState({ toggle: 1 });\n        } \n        else  {\n            this.setState({ toggle: 0 }); \n        }\n    }\n\n    render() { \n        return ( \n            <div id = 'dashboard_parent_container'>\n                <div id = 'dashboard_container'>\n                 {/* <img src = {require('../images/logo.png')} alt = 'logo' /> */}\n                    <section>\n                        <h4><span>Welcome back</span> {this.props.data.username} </h4>\n                        <h6>All the information you want to share with your Dr. is here. <br />\n                            Feel free to update it at any time below. \n                        </h6>\n                        <ul>\n                            <li><span>Username:</span> {this.props.data.username}</li>\n                            <li><span>Full Name:</span> {this.props.data.fullname}</li>\n                            <li><span>Email:</span> {this.props.data.email}</li>\n                            <li><span>Phone #:</span> {this.props.data.phone}</li>\n                        </ul>\n                    </section>\n                    {/* EDIT SECTION TO TOGGLE  */}\n                    <button className = 'btn btn-sm btn-primary btn-block mb-3' \n                    onClick = {this.edit_toggle}>{this.state.toggle === 0 ? \"Edit Info\" : \"Back\"}</button>\n                    \n                    {/* EDIT FORM */}\n                    {this.state.toggle === 1 && <section id = \"dashboard_edit\" >\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' name = 'fullname' value = {this.props.data.fullname} \n                                onChange = {this.props.change} className = 'form-control'\n                                /> \n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'email' name = 'email' value = {this.props.data.email} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'string' name = 'phone' value = {this.props.data.phone} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <input type = 'submit' onClick = {this.props.submit} className = 'btn btn-block'\n                            value = 'Save Changes' /> \n                        </form>\n                    </section>}\n\n                    {/* FILE UPLOAD FORM */}\n                    <section>\n                        <h4><span>Send Dr. Furelos a file</span></h4>\n                        <h6>If you need to share a file with Dr. Furelos you can do so here. \n                            Click on choose file.\n                        </h6>\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' placeholder = 'file name' className = 'form-control mb-2' />\n                                <input type = 'file' name = 'file' onChange = {this.props.file.file_change}\n                                className = 'btn-primary btn-block'\n                                />\n                            </div>\n                            <input type = 'submit' className = 'btn btn-primary btn-block' onClick = {this.props.file.file_submit}\n                            value = 'Send File' /> \n                        </form>\n                    </section>\n\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Dashboard;","\nimport React, {Component} from 'react';\nimport '../styles/contact.css'; \nimport axios from 'axios'; \n\nclass Contact extends Component{\n    state = {\n        name: '',\n        subject: '',\n        message: ''\n    }\n    form_change = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        }, () => console.log(this.state)); \n    }\n\n    form_submit = async (e) => {\n        e.preventDefault();\n        await axios.post('/api/nodemailer', {\n            name: this.state.name,\n            subject: this.state.subject,\n            message: this.state.message\n        })\n        .then( data => {\n            console.log('Email has been sent!', data);\n        } )\n        .catch( ex => console.log('Unable to send email:', ex) ); \n    }\n\n    render(){\n        return(\n            <div id = 'contact_container'>\n                <div>\n                    <h1>Contact the Clinic</h1>\n                    <form>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'name' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.name} placeHolder = 'name' />\n                        </div>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'subject' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.subject} placeHolder = 'subject' />\n                        </div>\n                        <div className = 'form-group'>\n                            <textarea type = 'text' name = 'message' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.message} placeHolder = 'message...'\n                            ></textarea>\n                        </div>\n                        <input type = 'submit' className = 'btn btn-block btn-primary' onClick = {this.form_submit} />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Video from 'twilio-video';\nimport axios from 'axios';\n\nexport default class Chat extends Component {\n constructor(props) {\n   super(props);\n   this.state = {\n    token: '',\n    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n    roomName: '',    /* Will store the room name */\n    roomNameErr: false,  /* Track error for room name TextField. This will enable us to show an error message when this variable is true */\n    previewTracks: null,\n    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n    hasJoinedRoom: false,\n    activeRoom: null // Track the current active room\n }\n\n  this.joinRoom = this.joinRoom.bind(this);\n  this.roomJoined = this.roomJoined.bind(this);\n  this.handleRoomNameChange = this.handleRoomNameChange.bind(this);\n  this.leaveRoom = this.leaveRoom.bind(this);\n  this.detachTracks = this.detachTracks.bind(this);\n  this.detachParticipantTracks =this.detachParticipantTracks.bind(this);\n}\n\nasync componentDidMount() {\n    await axios.get('/token').then(results => {\n      const { identity, token } = results.data;\n      this.setState({ identity, token });\n      console.log('token granted', this.state.token);\n    });\n  }\n\n  handleRoomNameChange(e) {\n    /* Fetch room name from text field and update state */\n        let roomName = e.target.value; \n        this.setState({ roomName });\n  }\n  \n  joinRoom() {\n        if (!this.state.roomName.trim()) {\n            this.setState({ roomNameErr: true });\n            return;\n        }\n        console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n        let connectOptions = {\n            name: this.state.roomName\n        };\n  \n        if (this.state.previewTracks) {\n            connectOptions.tracks = this.state.previewTracks;\n        }\n\n      Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n        alert('Could not connect to Twilio: ' + error.message);\n      });\n  }\n\n  attachTracks(tracks, container) {\n    tracks.forEach(track => {\n      container.appendChild(track.attach());\n    });\n  }\n  \n  // Attach the Participant's Tracks to the DOM.\n  attachParticipantTracks(participant, container) {\n    var tracks = Array.from(participant.tracks.values());\n    this.attachTracks(tracks, container);\n  }\n  \n  roomJoined(room) {\n    // Called when a participant joins a room\n    console.log(\"Joined as '\" + this.state.identity + \"'\");\n    this.setState({\n      activeRoom: room,\n      localMediaAvailable: true,\n      hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n    });\n  \n    // Attach LocalParticipant's tracks to the DOM, if not already attached.\n    var previewContainer = this.refs.localMedia;\n    if (!previewContainer.querySelector('video')) {\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\n    }\n      // ... more event listeners\n\n    // REMOVING TRACKS (OTHER USERS) == REMOVING TRACKS (OTHER USERS) == REMOVING TRACKS (OTHER USERS)\n    // REMOVING TRACKS (OTHER USERS) == REMOVING TRACKS (OTHER USERS) == REMOVING TRACKS (OTHER USERS)\n    room.participants.forEach(participant => {\n      console.log(\"Already in Room: '\" + participant.identity + \"'\");\n      var previewContainer = this.refs.remoteMedia;\n      this.attachParticipantTracks(participant, previewContainer);\n    });\n\n    // Participant joining room\n    room.on('participantConnected', participant => {\n      console.log(\"Joining: '\" + participant.identity + \"'\");\n    });\n\n    // Attach participant’s tracks to DOM when they add a track\n    room.on('trackAdded', (track, participant) => {\n      console.log(participant.identity + ' added track: ' + track.kind);\n      var previewContainer = this.refs.remoteMedia;\n      this.attachTracks([track], previewContainer);\n    });\n\n    // Detach participant’s track from DOM when they remove a track.\n    room.on('trackRemoved', (track, participant) => {\n      console.log(participant.identity + ' removed track: ' + track.kind);\n      this.detachTracks([track]);\n    });\n\n    // Detach all participant’s track when they leave a room.\n    room.on('participantDisconnected', participant => {\n      console.log(\"Participant '\" + participant.identity + \"' left the room\");\n      this.detachParticipantTracks(participant);\n    });\n\n    // Once the local participant leaves the room, detach the Tracks\n    // of all other participants, including that of the LocalParticipant.\n    room.on('disconnected', () => {\n      if (this.state.previewTracks) {\n        this.state.previewTracks.forEach(track => {\n          track.stop();\n        });\n      }\n      this.detachParticipantTracks(room.localParticipant);\n      room.participants.forEach(this.detachParticipantTracks);\n      this.state.activeRoom = null;\n      this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n    }); \n  }\n\n\n  // LEAVING A ROOM == LEAVING A ROOM == LEAVING A ROOM == LEAVING A ROOM \n  // LEAVING A ROOM == LEAVING A ROOM == LEAVING A ROOM == LEAVING A ROOM \n  leaveRoom() {\n    this.state.activeRoom.disconnect();\n    this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n }\n\n  // HANDLING OTHER USERS == HANDLING OTHER USERS == HANDLING OTHER USERS == HANDLING OTHER USERS \n  // HANDLING OTHER USERS == HANDLING OTHER USERS == HANDLING OTHER USERS == HANDLING OTHER USERS \n  detachTracks(tracks) {\n    tracks.forEach(track => {\n      track.detach().forEach(detachedElement => {\n        detachedElement.remove();\n      });\n    });\n  }\n\n  detachParticipantTracks(participant) {\n    var tracks = Array.from(participant.tracks.values());\n    this.detachTracks(tracks);\n  }\n\n\n  render() {\n    const styles = {\n      display:'flex',\n      flexDirection: 'row', \n      border: 'solid thick pink'\n    }\n    /* \n     Controls showing of the local track\n     Only show video track after user has joined a room else show nothing \n    */\n    let showLocalTrack = this.state.localMediaAvailable ? (\n      <div className=\"flex-item\"><div ref=\"localMedia\" /></div>) : '';   \n    /*\n     Controls showing of ‘Join Room’ or ‘Leave Room’ button.  \n     Hide 'Join Room' button if user has already joined a room otherwise \n     show `Leave Room` button.\n    */\n    let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n    <button label=\"Leave Room\" secondary='true' onClick={this.leaveRoom}>Leave</button>) : (\n    <button label=\"Join Room\" primary=\"true\" onClick={this.joinRoom}>Enter</button>);\n\n    return (\n      <div>\n          <div>\n            <div className=\"flex-container\" style = {styles}>\n            {showLocalTrack} \n            {/* Show local track if available */}\n            <div className=\"flex-item\" ref=\"remoteMedia\" id=\"remote-media\" />\n          </div>\n          <div className=\"flex-item\" >\n                <h1>{this.state.roomName}</h1>\n                <input type = 'text' placeholder = 'room name' onChange={this.handleRoomNameChange} /> <br/>\n                {joinOrLeaveRoomButton}  {/* Show either ‘Leave Room’ or ‘Join Room’ button */}\n          </div>\n        </div>\n    </div>\n    );\n  }\n}","import React from 'react';\nimport './index.css'; \nimport './styles/app/app.css'; \nimport 'bootstrap/dist/css/bootstrap.css'; \nimport axios from 'axios'; \nimport jwtDecode from 'jwt-decode'; \n// COMPONENTS\nimport Jumbotron from './components/Jumbotron'; \nimport Navbar from './components/Navbar'; \nimport Login from './components/Login'; \nimport Dashboard from './components/Dashboard'; \nimport Chat from './components/Chat'; \nimport Contact from './components/Contact'; \n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            page: '',\n            username: '',\n            password: '',\n            logged: false,\n            userData: {\n                username: '',\n                fullname: '',\n                email: '',\n                phone: '',\n                chatKey: ''\n            },\n            file: ''\n        }\n    }\n\n    // RETRIEVE && DECODE - JWT \n    jwt = () => {\n        const token = localStorage.getItem('token');\n        return token; \n    }\n    jwt_decode = () => {\n        const decoded = jwtDecode(this.jwt());\n        return decoded; \n    }\n\n    // FADE IN BODY, CALLED FROM COMPONENT DID MOUNT \n    body_fade_in = () => {\n        const root = document.querySelector('#parent_container');\n        setTimeout(() => {\n            root.classList.add('fade_in'); \n        }, 2000);\n    }\n\n    // ON CHANGE LOGIN FORM HANDLER \n    login_change = (e) => {\n        this.setState({ [e.target.name]: e.target.value }); \n    }\n    // ON CHANGE FOR EDIT FORM \n    update_change = (e) => {\n        // create a dummy object to update properties then this.setState replacing old userData object with dummy. \n        const dummy = this.state.userData; \n\n        if(e.target.name === 'fullname'){\n            dummy.fullname = e.target.value;\n        } \n        if(e.target.name === 'email'){\n            dummy.email = e.target.value;\n        }\n        if(e.target.name === 'phone'){\n            dummy.phone = e.target.value;\n        }\n\n        this.setState({ dummy }); \n    }\n\n    // FILE UPLOAD  // FILE UPLOAD  // FILE UPLOAD\n    file_change = (e) => {\n        this.setState({ file: e.target.files[0] }, () => console.log('file state', this.state.file)); \n    }\n\n    file_submit = async (e) => {\n        e.preventDefault();\n        const form = new FormData();\n        form.append('file', this.state.file); \n\n        await axios.post('/api/file_upload', form, {\n            headers: {\n                \"Content-type\": \"multipart/form-data\",\n                \"x-auth-token\": this.jwt()\n            }\n        })\n        .then( data => console.log('file sent', data) )\n        .catch( ex => console.log('unable to send file', ex) ); \n    }\n\n    // UPDATE ACCOUNT METHOD\n    update_submit = async (e) => {\n        e.preventDefault();\n        // JWT DECODED TO RETRIEVE USER_ID FROM JWT PAYLOAD AND USE ID TO MAKE MONGO UPDATE \n        let dummy = this.jwt_decode();\n\n        // AXIOS POST REQ TO UPDATE USER INFO\n        await axios.post('/api/update_patient', {\n            _id: dummy.user_id, // ID FROM JWT PAYLOAD\n            fullname: this.state.userData.fullname,\n            email: this.state.userData.email,\n            phone: this.state.userData.phone\n        }, {\n            headers: {\n                'x-auth-token':this.jwt()\n            }\n        })\n        .then( data => console.log('Updated data sent!', data) )\n        .catch( ex => console.log('Updated failed...', ex) ); \n    }\n\n    // LOGIN SUBMIT METHOD\n    login_submit = async (e) => {\n        e.preventDefault();\n        await axios.get('/api/login_patient', {\n            params: {\n                username: this.state.username,\n                password: this.state.password\n            }\n        })\n        .then( user => {\n            // POPULATING GLOBAL STATE WITH API PAYLOAD\n            this.setState({\n                userData: {\n                    username: user.data.username,\n                    fullname: user.data.fullname,\n                    email: user.data.email,\n                    phone: user.data.phone,\n                    chatKey: user.data.chatKey\n                }          \n            }, () => console.log('updpated global state: ', this.state)); \n\n            // UPDATE STATE LOGGED: TRUE\n            this.setState({ logged: true }); \n            \n            // SAVING JWT IN LOCAL APPLICATION STORAGE \n            const token = user.headers['x-auth-token'];\n            localStorage.setItem('token', token); \n        } )\n        .catch( ex => console.log('Unable to retrieve data: ', ex) ); \n    }\n\n    // COMPONENTDIDMOUNT TRIGGERS FADE IN ON LOAD \n    componentDidMount(){\n        this.body_fade_in();\n\n        // ON MOUNT CHECK IF JWT, TO RENDER PAGE\n        const token = localStorage.getItem('token');\n        // if(token) { this.setState({ logged: true }) }\n    }\n\n\n    render() { \n        // PROPS FOR LOGIN COMPONENT\n        const login_props = {\n            change: this.login_change,\n            submit: this.login_submit,\n            username: this.state.username,\n            password: this.state.password,\n        }\n        // PROPS FOR DASHBOARD, THIS.STATE.USERDATA\n        const user_data = this.state.userData; \n        const file = {\n            file_change: this.file_change,\n            file_submit: this.file_submit\n        }\n\n        return ( \n            <div id = 'parent_container' className = 'fade_transition'>\n                <header className = 'header'>\n                    <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                    <Navbar /> \n                </header>\n                <main>\n                    <Jumbotron />\n                    { this.state.logged ? <Dashboard data = {user_data} submit = {this.update_submit}\n                    change = {this.update_change} file = {file} /> : <Login login = {login_props} /> }\n                </main>\n                <footer>\n                    <Contact /> \n                </footer>\n            </div>\n         );\n    }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app'; \n\nReactDOM.render(<App />, document.querySelector('#root')); ","module.exports = __webpack_public_path__ + \"static/media/one.a2297d06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/two.38354f98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/three.298ea34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/four.cbdd4dc7.jpg\";"],"sourceRoot":""}