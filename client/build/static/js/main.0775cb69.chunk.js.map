{"version":3,"sources":["images/home.png","images/contact.png","images/logo.png","components/Jumbotron.jsx","components/sidebar.jsx","components/Login.jsx","components/Dashboard.jsx","components/Chat.jsx","components/Contact.jsx","app.jsx","index.js","images/next.png","images/one.jpg","images/two.jpg","images/login.png","images/doctor-icon.png","images/three.jpg","images/four.jpg"],"names":["module","exports","Jumbotron","state","image1","one","image2","two","count","jumbotron_1","document","querySelector","jumbotron_2","querySelectorAll","this","timeout","setTimeout","classList","add","interval","setInterval","toggle","setState","three","four","timeOut","jumbotron","remove","console","log","clearInterval","clearTimeout","className","src","alt","React","Component","Navbar","onSetSidebarOpen","sidebarOpen","open","content","require","onClick","props","page_handler","id","logged","to","animate","offset","duration","pullRight","sidebar","onSetOpen","styles","background","width","marginTop","border","padding","position","type","style","float","Login","name","value","login","username","onChange","change","placeHolder","password","submit","Dashboard","edit_toggle","e","dashboard","slide","data","fullname","email","phone","placeholder","file","file_change","file_submit","VideoComponent","token","identity","roomName","roomNameErr","previewTracks","localMediaAvailable","hasJoinedRoom","activeRoom","joinRoom","bind","handleRoomNameChange","leaveRoom","detachTracks","detachParticipantTracks","roomJoined","getTracks","axios","get","then","results","target","trim","connectOptions","tracks","Video","connect","error","alert","message","container","forEach","track","appendChild","attach","participant","isLocal","attachTracks","Array","from","values","filter","publication","map","room","previewContainer","refs","localMedia","attachParticipantTracks","localParticipant","participants","remoteMedia","isSubscribed","getElementById","on","kind","display","stop","disconnect","htmlElements","detach","chat","chat_page","showLocalTrack","ref","joinOrLeaveRoomButton","errorText","undefined","Contact","subject","form_change","form_submit","a","async","preventDefault","post","catch","ex","required","App","page","jwt","localStorage","getItem","jwt_decode","jwtDecode","body_fade_in","root","login_change","update_change","dummy","userData","files","form","FormData","append","headers","update_submit","_id","user_id","login_submit","params","user","chatKey","setItem","login_props","user_data","ReactDOM","render"],"mappings":"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","file":"static/js/main.0775cb69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.b00c10b3.png\";","module.exports = __webpack_public_path__ + \"static/media/contact.251cb2aa.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.cfd14ba7.png\";","import React from 'react';\nimport one from '../images/one.jpg';\nimport two from '../images/two.jpg';\nimport three from '../images/three.jpg';\nimport four from '../images/four.jpg';\n\nclass Jumbotron extends React.Component{\n    state = {\n        image1: one,\n        image2: two,\n        count: 0\n    }\n    componentDidMount(){\n        const jumbotron_1 = document.querySelector('.jumbotron_parent div:nth-child(1)');\n        const jumbotron_2 = document.querySelector('.jumbotron_parent div:nth-child(2)');\n        const jumbo_divs = document.querySelectorAll('.jumbo_div');\n        let count = 0; \n\n        this.timeout = setTimeout(() => {\n        //    jumbo_divs.forEach( div => div.classList.add('fade_in') ); \n        jumbotron_1.classList.add('fade_in'); \n\n           this.interval = setInterval(() => {\n            jumbotron_1.classList.toggle('toggle_opacity'); // DIV 1 - FADE OUT\n            jumbotron_2.classList.add('fade_in'); // DIV 2 - FADE IN \n            count++;\n            \n            if(count > 3) { count = 0; }\n\n            if(count == 0){\n                this.setState({ image1: one }); \n            }\n            else if(count == 1){\n                this.setState({ image2: two }); \n            }\n            else if(count == 2){\n                this.setState({ image1: three }); \n            } \n            else if (count == 3){\n                this.setState({ image2: four }); \n            }\n        }, 5000); \n\n        }, 6000); \n\n\n        this.timeOut = setTimeout(() => {\n            const jumbotron = document.querySelector('.jumbotron_parent');\n            jumbotron.classList.remove('slide_out'); \n            jumbotron.classList.add('slide_in');\n        }, 2000);\n    }\n\n    componentWillUnmount(){\n        console.log(`unmounting jumbotron and clearing ${this.interval}`); \n        clearInterval(this.interval);\n        clearTimeout(this.timeOut); \n    }\n    render(){\n        return(\n            <div className = 'page_transition'>\n                <main className = 'jumbotron_parent slide_transition slide_out'>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image1} alt = '' />\n                    </div>\n                    <div className = 'jumbo_div fade_transition'>\n                        <img src = {this.state.image2} alt = '' />\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Jumbotron; ","import React, {Component} from 'react';\nimport '../styles/hamburger/hamburgers.css'; \nimport Sidebar from 'react-sidebar';\nimport Scrollchor from 'react-scrollchor';\nimport '../styles/navbar.css'; \n\nclass Navbar extends Component {\n    state = { \n        onSetSidebarOpen: true,\n        sidebarOpen: false\n     }\n\n    onSetSidebarOpen = (open) => {\n        this.setState({ sidebarOpen: open });\n    }\n\n    render() { \n        // WRITE NAVBAR CONTENT IN content, THEN INJECT IT INTO SIDEBAR \n        const content = \n        <div className = 'navbar_container'>\n            <span>\n                <img src = {require('../images/logo.png')} alt = 'logo' />\n            </span>\n            <nav>\n                    <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/home.png')} alt = ''/>\n                        <p id = 'home'>Home</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>\n                    <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/login.png')} alt = ''/>\n                        <p id = 'login'>{this.props.logged ? \"Dashboard\" : \"Login\"}</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>\n                    {this.props.logged && <a className = 'nav_item' onClick = {this.props.page_handler} >\n                        <img src = {require('../images/doctor-icon.png')} alt = ''/>\n                        <p id = 'consultation'>Consultation</p>\n                        <img src = {require('../images/next.png')} alt = ''/>\n                    </a>}\n                    <Scrollchor to=\"#contact_container\" animate={{offset: 12, duration: 300}}>\n                        <a className = 'nav_item' onClick = {this.props.page_handler} >\n                            <img src = {require('../images/contact.png')} alt = ''/>\n                            <p id = 'contact'>Contact</p>\n                            <img src = {require('../images/next.png')} alt = ''/>\n                        </a>\n                    </Scrollchor>\n            </nav> \n        </div>; \n\n        const navbar_styling = { \n            background: \"white\", \n            width: 300, \n            marginTop: 90, \n            border: 'solid thick rgba(192, 192, 192, 0.589)',\n            padding: 10,\n            position: 'fixed'\n    }\n\n        return ( \n            <div>\n                <Sidebar \n                    pullRight // floats the sidebar to the right \n                    sidebar={<b>{ content }</b>} // SIDEBAR CONTENT GOES HERE \n                    open={this.state.sidebarOpen} // opens value is this.state.onSetSidebarOpen which is passed to the function\n                    onSetOpen={this.onSetSidebarOpen} // triggers open and close of sidebar \n                    styles={{ sidebar: navbar_styling }} // styling \n                >\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    <button onClick={() => this.onSetSidebarOpen(true)} \n                    className={ this.state.sidebarOpen ? \"hamburger hamburger--elastic is-active\" : \"hamburger hamburger--elastic\" } \n                    type=\"button\" style = {{ float: 'right', marginTop: 10 }} >\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                {/* HAMBURGER SECTION WITH CSS CLASSES */}\n                    </button>\n                </Sidebar>\n            </div>\n         );\n    }\n}\n \nexport default Navbar;","import React from 'react';\nimport '../styles/dashboard/login.css'; \nimport axios from 'axios'; \n\nclass Login extends React.Component{\n    render(){\n        return(\n                <div id = 'login' className = 'login_container'>\n                    <div> \n                        <span>\n                            <img src ={require('../images/login.png')} alt = '' />\n                            <h1>Login to your account</h1>\n                        </span>\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' name = 'username' className = 'form-control' \n                                    value = {this.props.login.username} onChange = {this.props.login.change}\n                                    placeHolder = \"username\"\n                                />\n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'password' name = 'password' className = 'form-control' \n                                    value = {this.props.login.password} onChange = {this.props.login.change}\n                                    placeHolder = \"password\"\n                            />\n                            </div>\n                            <input type = 'submit' className = 'btn btn-block btn-primary' \n                                value = 'login' onClick = {this.props.login.submit}\n                            />\n                        </form>\n                    </div>\n                </div>\n        )\n    }\n}\n\nexport default Login; ","\nimport React from 'react';\nimport axios from 'axios'; \nimport '../styles/dashboard/dashboard.css'; \n\nclass Dashboard extends React.Component {\n    state = {\n        toggle: 0\n    }\n    edit_toggle = (e) => {\n        if(this.state.toggle === 0){\n            this.setState({ toggle: 1 });\n        } \n        else  {\n            this.setState({ toggle: 0 }); \n        }\n    }\n\n    componentDidMount(){\n        const dashboard = document.querySelector('#dashboard_parent_container');\n        this.slide = setTimeout(() => {\n            dashboard.classList.remove('slide_out_left');\n            dashboard.classList.add('slide_in_right'); \n        }, 1000);\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.slide); \n    }\n\n    render() { \n        return ( \n            <div id = 'dashboard_parent_container' className = 'slide_transition slide_out_left'>\n                <div id = 'dashboard_container'>\n                 {/* <img src = {require('../images/logo.png')} alt = 'logo' /> */}\n                    <section>\n                        <h4><span>Welcome back</span> {this.props.data.username} </h4>\n                        <h6>All the information you want to share with your Dr. is here. <br />\n                            Feel free to update it at any time below. \n                        </h6>\n                        <ul>\n                            <li><span>Username:</span> {this.props.data.username}</li>\n                            <li><span>Full Name:</span> {this.props.data.fullname}</li>\n                            <li><span>Email:</span> {this.props.data.email}</li>\n                            <li><span>Phone #:</span> {this.props.data.phone}</li>\n                        </ul>\n                    </section>\n                    {/* EDIT SECTION TO TOGGLE  */}\n                    <button className = 'btn btn-sm btn-primary btn-block mb-3' \n                    onClick = {this.edit_toggle}>{this.state.toggle === 0 ? \"Edit Info\" : \"Back\"}</button>\n                    \n                    {/* EDIT FORM */}\n                    {this.state.toggle === 1 && <section id = \"dashboard_edit\" >\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' name = 'fullname' value = {this.props.data.fullname} \n                                onChange = {this.props.change} className = 'form-control'\n                                /> \n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'email' name = 'email' value = {this.props.data.email} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <div className = 'form-group'>\n                                <input type = 'string' name = 'phone' value = {this.props.data.phone} \n                                onChange = {this.props.change} className = 'form-control'\n                                />\n                            </div>\n                            <input type = 'submit' onClick = {this.props.submit} className = 'btn btn-block'\n                            value = 'Save Changes' /> \n                        </form>\n                    </section>}\n\n                    {/* FILE UPLOAD FORM */}\n                    <section>\n                        <h4><span>Send Dr. Furelos a file</span></h4>\n                        <h6>If you need to share a file with Dr. Furelos you can do so here. \n                            Click on choose file.\n                        </h6>\n                        <form>\n                            <div className = 'form-group'>\n                                <input type = 'text' placeholder = 'file name' className = 'form-control mb-2' />\n                                <input type = 'file' name = 'file' onChange = {this.props.file.file_change}\n                                className = 'btn-primary btn-block'\n                                />\n                            </div>\n                            <input type = 'submit' className = 'btn btn-primary btn-block' onClick = {this.props.file.file_submit}\n                            value = 'Send File' /> \n                        </form>\n                    </section>\n\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Dashboard;","import React, { Component } from 'react';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport '../styles/chat.css'; \n\n// import RaisedButton from 'material-ui/RaisedButton';\n// import TextField from 'material-ui/TextField';\n// import { Card, CardHeader, CardText } from 'material-ui/Card';\n\nexport default class VideoComponent extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n          token: '', \n          identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n          roomName: '',    /* Will store the room name */\n          roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n          previewTracks: null,\n          localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n          hasJoinedRoom: false,\n          activeRoom: null // Track the current active room\n       };\n        this.joinRoom = this.joinRoom.bind(this);\n        this.handleRoomNameChange = this.handleRoomNameChange.bind(this);\n        this.leaveRoom = this.leaveRoom.bind(this);\n        this.detachTracks = this.detachTracks.bind(this);\n        this.detachParticipantTracks =this.detachParticipantTracks.bind(this);\n        this.roomJoined = this.roomJoined.bind(this);\n        this.getTracks = this.getTracks.bind(this); \n     }\n\n    componentDidMount() {\n        axios.get('/api/twilio').then(results => {\n          /*\n            Make an API call to get the token and identity(fake name) and  \n            update the corresponding state variables.\n          */\n          const { identity, token } = results.data;\n          this.setState({ identity, token });\n        });\n      }\n\n    handleRoomNameChange(e) {\n        /* Fetch room name from text field and update state */\n            let roomName = e.target.value; \n            this.setState({ roomName });\n        }\n\n    joinRoom() {\n            /* \n         Show an error message on room name text field if user tries         \n         joining a room without providing a room name. This is \n         enabled by setting `roomNameErr` to true\n           */\n                if (!this.state.roomName.trim()) {\n                     this.setState({ roomNameErr: true });\n                     return;\n                 }\n         \n                 console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n                 let connectOptions = {\n                     name: this.state.roomName\n                 };\n         \n                 if (this.state.previewTracks) {\n                     connectOptions.tracks = this.state.previewTracks;\n                 }\n         \n        /* \n         Connect to a room by providing the token and connection    \n         options that include the room name and tracks. We also show an \n         alert if an error occurs while connecting to the room.    \n         */  \n         Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n           alert('Could not connect to Twilio: ' + error.message);\n         });\n         }\n\n         attachTracks(tracks, container) {\n            tracks.forEach(track => {\n              container.appendChild(track.attach());\n            });\n          }\n          \n          // Attach the Participant's Tracks to the DOM.\n        attachParticipantTracks(participant, container, isLocal) {\n            var tracks = this.getTracks(participant);\n            console.log('attaching participant tracks'); \n            this.attachTracks(tracks, container, isLocal);\n         }\n         \n        getTracks(participant) {\n            return Array.from(participant.tracks.values()).filter(function (publication) {\n               return publication.track;\n            }).map(function (publication) {\n               return publication.track;\n            });\n         }\n\n        roomJoined(room) {\n            // Called when a participant joins a room\n            console.log(\"Joined as '\" + this.state.identity + \"'\");\n            this.setState({\n              activeRoom: room,\n              localMediaAvailable: true,\n              hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n            });\n            \n          \n            // Attach LocalParticipant's tracks to the DOM, if not already attached.\n            var previewContainer = this.refs.localMedia;\n            if (!previewContainer.querySelector('video')) {\n              this.attachParticipantTracks(room.localParticipant, previewContainer);\n            }\n              // ... more event listeners\n\n            // Attach the Tracks of the room's participants.\n            room.participants.forEach(participant => {\n                console.log(\"Already in Room: '\" + participant.identity + \"'\");\n                var previewContainer = this.refs.remoteMedia;\n                this.attachParticipantTracks(participant, previewContainer);\n\n                participant.tracks.forEach(publication => {\n                  if (publication.isSubscribed) {\n                    const track = publication.track;\n                    document.getElementById('remote-media-div').appendChild(track.attach());\n                  }\n                });\n              \n                participant.on('trackSubscribed', track => {\n                  document.getElementById('remote-media-div').appendChild(track.attach());\n                });\n            });\n        \n            // Participant joining room\n            room.on('participantConnected', participant => {\n                console.log(\"Joining: '\" + participant.identity + \"'\");\n\n                participant.tracks.forEach(publication => {\n                  if (publication.isSubscribed) {\n                    const track = publication.track;\n                    document.getElementById('remote-media-div').appendChild(track.attach());\n                  }\n                });\n              \n                participant.on('trackSubscribed', track => {\n                  document.getElementById('remote-media-div').appendChild(track.attach());\n                });\n            });\n        \n            // Attach participant’s tracks to DOM when they add a track\n            room.on('trackAdded', (track, participant) => {\n                console.log(participant.identity + ' added track: ' + track.kind);\n                var previewContainer = this.refs.remoteMedia;\n                this.attachTracks([track], previewContainer);\n            });\n        \n            // Detach participant’s track from DOM when they remove a track.\n            room.on('trackRemoved', (track, participant) => {\n                this.log(participant.identity + ' removed track: ' + track.kind);\n                this.detachTracks([track]);\n            });\n        \n            // Detach all participant’s track when they leave a room.\n            room.on('participantDisconnected', participant => {\n                console.log(\"Participant '\" + participant.identity + \"' left the room\");\n                this.detachParticipantTracks(participant);\n                document.getElementById('remote-media-div').style.display = 'none';\n            });\n\n            room.on('disconnected', (room) => {\n                if (this.state.previewTracks) {\n                  this.state.previewTracks.forEach(track => {\n                    track.stop(); \n                  });\n                }\n                this.detachParticipantTracks(room.localParticipant);\n                room.participants.forEach(this.detachParticipantTracks);\n                this.state.activeRoom = null;\n                this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n              });\n        }\n\n          // Leaving a room \n          leaveRoom(){\n            this.state.activeRoom.disconnect();\n            this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n         }\n\n         detachParticipantTracks(participant) {\n            var tracks = this.getTracks(participant);\n            this.detachTracks(tracks);\n         }\n         \n         detachTracks(tracks) {\n            for (let track of tracks) {\n              const htmlElements = track.detach();\n              for (let htmlElement of htmlElements) {\n                 htmlElement.remove();\n               }\n            }\n         }\n\n         componentDidMount(){\n           const chat = document.querySelector('.chat_parent_container');\n           this.slide = setTimeout(() => {\n            chat.classList.remove('slide_out');\n            chat.classList.add('slide_in'); \n           }, 1000); \n         }\n      \n\n      render() {\n\n        let chat_page = <div className=\"chat_content\">\n                          <h1>Chat</h1>\n                          <img className = 'chat_items' src = {require('../images/doctor-icon.png')} alt = '' />\n                        </div>; \n        /* \n         Controls showing of the local track\n         Only show video track after user has joined a room else show nothing \n        */\n        let showLocalTrack = this.state.localMediaAvailable ? (\n          <div>\n            <div ref=\"localMedia\" id = 'video' className=\"chat_content\" />\n            <div id = 'remote-media-div' />\n          </div> ) : chat_page;   \n        /*\n         Controls showing of ‘Join Room’ or ‘Leave Room’ button.  \n         Hide 'Join Room' button if user has already joined a room otherwise \n         show `Leave Room` button.\n        */\n        let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n        <input type = 'submit' className = 'chat_btn btn btn-primary' value=\"Leave Room\" onClick={this.leaveRoom}  />) : (\n        <input type = 'submit' className = 'chat_btn btn btn-primary' value=\"Join Room\"  onClick={this.joinRoom} />\n        );\n\n        return (\n            <div className=\"chat_parent_container slide_transition slide_out\">\n                <div className = 'chat'>\n                    {showLocalTrack}\n                    {!this.state.hasJoinedRoom && <input className = 'chat_items' type = 'text' placeHolder=\"Your Chat Key\" onChange={this.handleRoomNameChange} \n                    errorText = {this.state.roomNameErr ? 'Room Name is required' : undefined} \n                    /> \n                    }\n                    {joinOrLeaveRoomButton}  \n                </div>\n            </div>\n        );\n      }\n}","\nimport React, {Component} from 'react';\nimport '../styles/contact.css'; \nimport axios from 'axios'; \n\nclass Contact extends Component{\n    state = {\n        name: '',\n        subject: '',\n        message: ''\n    }\n    form_change = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        }, () => console.log(this.state)); \n    }\n\n    form_submit = async (e) => {\n        e.preventDefault();\n        await axios.post('/api/nodemailer', {\n            name: this.state.name,\n            subject: this.state.subject,\n            message: this.state.message\n        })\n        .then( data => {\n            console.log('Email has been sent!', data);\n        } )\n        .catch( ex => console.log('Unable to send email:', ex) ); \n    }\n\n    render(){\n        return(\n            <div id = 'contact_container'>\n                <div>\n                    <h1>Contact the Clinic</h1>\n                    <form>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'name' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.name} placeHolder = 'name' required/>\n                        </div>\n                        <div className = 'form-group'>\n                            <input type = 'text' name = 'subject' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.subject} placeHolder = 'subject' required/>\n                        </div>\n                        <div className = 'form-group'>\n                            <textarea type = 'text' name = 'message' onChange = {this.form_change}\n                            className = 'form-control' value = {this.state.message} placeHolder = 'message...'\n                            required></textarea>\n                        </div>\n                        <input type = 'submit' className = 'btn btn-block btn-primary' onClick = {this.form_submit} />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport './index.css'; \nimport './styles/app/app.css'; \nimport 'bootstrap/dist/css/bootstrap.css'; \nimport axios from 'axios'; \nimport jwtDecode from 'jwt-decode'; \n// COMPONENTS\nimport Jumbotron from './components/Jumbotron'; \nimport Navbar from './components/sidebar'; \nimport Login from './components/Login'; \nimport Dashboard from './components/Dashboard'; \nimport Chat from './components/Chat'; \nimport Contact from './components/Contact'; \n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            page: 'home',\n            username: '',\n            password: '',\n            logged: false,\n            userData: {\n                username: '',\n                fullname: '',\n                email: '',\n                phone: '',\n                chatKey: ''\n            },\n            file: ''\n        }\n    }\n\n    page_handler = (e) => {\n        if(e.target.id === 'home'){\n            this.setState({ page: 'home' });\n            console.log(e.target.id); \n        } else if (e.target.id === 'login'){\n            console.log(e.target.id); \n            this.setState({ page: 'dashboard' })\n        } else if (e.target.id === 'consultation'){\n            console.log(e.target.id); \n            this.setState({ page: 'consultation' }); \n        }\n    }\n\n    // RETRIEVE && DECODE - JWT \n    jwt = () => {\n        const token = localStorage.getItem('token');\n        return token; \n    }\n    jwt_decode = () => {\n        const decoded = jwtDecode(this.jwt());\n        return decoded; \n    }\n\n    // FADE IN BODY, CALLED FROM COMPONENT DID MOUNT \n    body_fade_in = () => {\n        const root = document.querySelector('#parent_container');\n        setTimeout(() => {\n            root.classList.add('fade_in'); \n        }, 2000);\n    }\n\n    // ON CHANGE LOGIN FORM HANDLER \n    login_change = (e) => {\n        this.setState({ [e.target.name]: e.target.value }); \n    }\n    // ON CHANGE FOR EDIT FORM \n    update_change = (e) => {\n        // create a dummy object to update properties then this.setState replacing old userData object with dummy. \n        const dummy = this.state.userData; \n\n        if(e.target.name === 'fullname'){\n            dummy.fullname = e.target.value;\n        } \n        if(e.target.name === 'email'){\n            dummy.email = e.target.value;\n        }\n        if(e.target.name === 'phone'){\n            dummy.phone = e.target.value;\n        }\n\n        this.setState({ dummy }); \n    }\n\n    // FILE UPLOAD  // FILE UPLOAD  // FILE UPLOAD\n    file_change = (e) => {\n        this.setState({ file: e.target.files[0] }, () => console.log('file state', this.state.file)); \n    }\n\n    file_submit = async (e) => {\n        e.preventDefault();\n        const form = new FormData();\n        form.append('file', this.state.file); \n\n        await axios.post('/api/file_upload', form, {\n            headers: {\n                \"Content-type\": \"multipart/form-data\",\n                \"x-auth-token\": this.jwt()\n            }\n        })\n        .then( data => console.log('file sent', data) )\n        .catch( ex => console.log('unable to send file', ex) ); \n    }\n\n    // UPDATE ACCOUNT METHOD\n    update_submit = async (e) => {\n        e.preventDefault();\n        // JWT DECODED TO RETRIEVE USER_ID FROM JWT PAYLOAD AND USE ID TO MAKE MONGO UPDATE \n        let dummy = this.jwt_decode();\n\n        // AXIOS POST REQ TO UPDATE USER INFO\n        await axios.post('/api/update_patient', {\n            _id: dummy.user_id, // ID FROM JWT PAYLOAD\n            fullname: this.state.userData.fullname,\n            email: this.state.userData.email,\n            phone: this.state.userData.phone\n        }, {\n            headers: {\n                'x-auth-token':this.jwt()\n            }\n        })\n        .then( data => console.log('Updated data sent!', data) )\n        .catch( ex => console.log('Updated failed...', ex) ); \n    }\n\n    // LOGIN SUBMIT METHOD\n    login_submit = async (e) => {\n        e.preventDefault();\n        await axios.get('/api/login_patient', {\n            params: {\n                username: this.state.username,\n                password: this.state.password\n            }\n        })\n        .then( user => {\n            // POPULATING GLOBAL STATE WITH API PAYLOAD\n            this.setState({\n                userData: {\n                    username: user.data.username,\n                    fullname: user.data.fullname,\n                    email: user.data.email,\n                    phone: user.data.phone,\n                    chatKey: user.data.chatKey\n                }          \n            }, () => console.log('updpated global state: ', this.state)); \n\n            // UPDATE STATE LOGGED: TRUE\n            this.setState({ logged: true }); \n            \n            // SAVING JWT IN LOCAL APPLICATION STORAGE \n            const token = user.headers['x-auth-token'];\n            localStorage.setItem('token', token); \n        } )\n        .catch( ex => console.log('Unable to retrieve data: ', ex) ); \n    }\n\n    // COMPONENTDIDMOUNT TRIGGERS FADE IN ON LOAD \n    componentDidMount(){\n        this.body_fade_in();\n\n        // ON MOUNT CHECK IF JWT, TO RENDER PAGE\n        const token = localStorage.getItem('token');\n        // if(token) { this.setState({ logged: true }) }\n    }\n\n\n    render() { \n        // PROPS FOR LOGIN COMPONENT\n        const login_props = {\n            change: this.login_change,\n            submit: this.login_submit,\n            username: this.state.username,\n            password: this.state.password,\n        }\n        // PROPS FOR DASHBOARD, THIS.STATE.USERDATA\n        const user_data = this.state.userData; \n        const file = {\n            file_change: this.file_change,\n            file_submit: this.file_submit\n        }\n\n        if(this.state.page === 'dashboard'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar page_handler = {this.page_handler} logged = {this.state.logged} /> \n                    </header>\n                    <main>\n                        { this.state.logged ? <Dashboard data = {user_data} submit = {this.update_submit}\n                        change = {this.update_change} file = {file} /> : <Login login = {login_props} /> }\n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n             );\n        } else if (this.state.page === 'home'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar  page_handler = {this.page_handler} logged = {this.state.logged} /> \n                    </header>\n                    <main>\n                        <Jumbotron /> \n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n            );\n        }\n        else if (this.state.page === 'consultation'){\n            return ( \n                <div id = 'parent_container' className = 'fade_transition'>\n                    <header className = 'header'>\n                        <img src = {require('./images/logo.png')} alt = 'brand logo' />\n                        <Navbar  page_handler = {this.page_handler} logged = {this.state.logged} /> \n                    </header>\n                    <main>\n                        <Chat />\n                        { this.state.logged ? <Dashboard data = {user_data} submit = {this.update_submit}\n                        change = {this.update_change} file = {file} /> : <Login login = {login_props} /> }\n                    </main>\n                    <footer>\n                       <Contact /> \n                    </footer>\n                </div>\n            );\n        }\n    }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app'; \n\nReactDOM.render(<App />, document.querySelector('#root')); ","module.exports = __webpack_public_path__ + \"static/media/next.8385e1b3.png\";","module.exports = __webpack_public_path__ + \"static/media/one.a2297d06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/two.38354f98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/login.4f1652b8.png\";","module.exports = __webpack_public_path__ + \"static/media/doctor-icon.80a54b5b.png\";","module.exports = __webpack_public_path__ + \"static/media/three.298ea34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/four.cbdd4dc7.jpg\";"],"sourceRoot":""}